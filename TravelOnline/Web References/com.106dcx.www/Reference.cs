//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace TravelOnline.com._106dcx.www {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ExtendedCodeServiceServiceSoapBinding", Namespace="http://service.techown.com/")]
    public partial class ExtendedCodeServiceService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback batchSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback variableSendOperationCompleted;
        
        private System.Threading.SendOrPostCallback querySendAppLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback massSendOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ExtendedCodeServiceService() {
            this.Url = global::TravelOnline.Properties.Settings.Default.TravelOnline_com_106dcx_www_ExtendedCodeServiceService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event batchSendCompletedEventHandler batchSendCompleted;
        
        /// <remarks/>
        public event variableSendCompletedEventHandler variableSendCompleted;
        
        /// <remarks/>
        public event querySendAppLogCompletedEventHandler querySendAppLogCompleted;
        
        /// <remarks/>
        public event massSendCompletedEventHandler massSendCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.techown.com/", ResponseNamespace="http://service.techown.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("batchSend", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string batchSend([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passWord, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string smsContent, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fileName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sendTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string smsPriority, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sendAppId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string extendedCode) {
            object[] results = this.Invoke("batchSend", new object[] {
                        userName,
                        passWord,
                        smsContent,
                        fileName,
                        sendTime,
                        smsPriority,
                        sendAppId,
                        extendedCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void batchSendAsync(string userName, string passWord, string smsContent, string fileName, string sendTime, string smsPriority, string sendAppId, string extendedCode) {
            this.batchSendAsync(userName, passWord, smsContent, fileName, sendTime, smsPriority, sendAppId, extendedCode, null);
        }
        
        /// <remarks/>
        public void batchSendAsync(string userName, string passWord, string smsContent, string fileName, string sendTime, string smsPriority, string sendAppId, string extendedCode, object userState) {
            if ((this.batchSendOperationCompleted == null)) {
                this.batchSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbatchSendOperationCompleted);
            }
            this.InvokeAsync("batchSend", new object[] {
                        userName,
                        passWord,
                        smsContent,
                        fileName,
                        sendTime,
                        smsPriority,
                        sendAppId,
                        extendedCode}, this.batchSendOperationCompleted, userState);
        }
        
        private void OnbatchSendOperationCompleted(object arg) {
            if ((this.batchSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.batchSendCompleted(this, new batchSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.techown.com/", ResponseNamespace="http://service.techown.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("variableSend", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string variableSend([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passWord, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string variableTemplateContent, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string fileName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sendTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string smsPriority, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sendAppId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string extendedCode) {
            object[] results = this.Invoke("variableSend", new object[] {
                        userName,
                        passWord,
                        variableTemplateContent,
                        fileName,
                        sendTime,
                        smsPriority,
                        sendAppId,
                        extendedCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void variableSendAsync(string userName, string passWord, string variableTemplateContent, string fileName, string sendTime, string smsPriority, string sendAppId, string extendedCode) {
            this.variableSendAsync(userName, passWord, variableTemplateContent, fileName, sendTime, smsPriority, sendAppId, extendedCode, null);
        }
        
        /// <remarks/>
        public void variableSendAsync(string userName, string passWord, string variableTemplateContent, string fileName, string sendTime, string smsPriority, string sendAppId, string extendedCode, object userState) {
            if ((this.variableSendOperationCompleted == null)) {
                this.variableSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnvariableSendOperationCompleted);
            }
            this.InvokeAsync("variableSend", new object[] {
                        userName,
                        passWord,
                        variableTemplateContent,
                        fileName,
                        sendTime,
                        smsPriority,
                        sendAppId,
                        extendedCode}, this.variableSendOperationCompleted, userState);
        }
        
        private void OnvariableSendOperationCompleted(object arg) {
            if ((this.variableSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.variableSendCompleted(this, new variableSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.techown.com/", ResponseNamespace="http://service.techown.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("querySendAppLog", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string querySendAppLog([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passWord, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sendTime) {
            object[] results = this.Invoke("querySendAppLog", new object[] {
                        userName,
                        passWord,
                        sendTime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void querySendAppLogAsync(string userName, string passWord, string sendTime) {
            this.querySendAppLogAsync(userName, passWord, sendTime, null);
        }
        
        /// <remarks/>
        public void querySendAppLogAsync(string userName, string passWord, string sendTime, object userState) {
            if ((this.querySendAppLogOperationCompleted == null)) {
                this.querySendAppLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnquerySendAppLogOperationCompleted);
            }
            this.InvokeAsync("querySendAppLog", new object[] {
                        userName,
                        passWord,
                        sendTime}, this.querySendAppLogOperationCompleted, userState);
        }
        
        private void OnquerySendAppLogOperationCompleted(object arg) {
            if ((this.querySendAppLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.querySendAppLogCompleted(this, new querySendAppLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://service.techown.com/", ResponseNamespace="http://service.techown.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("massSend", Form=System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public string massSend([System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string userName, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string passWord, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string smsContent, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string cellPhone, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sendTime, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string smsPriority, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string sendAppId, [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified)] string extendedCode) {
            object[] results = this.Invoke("massSend", new object[] {
                        userName,
                        passWord,
                        smsContent,
                        cellPhone,
                        sendTime,
                        smsPriority,
                        sendAppId,
                        extendedCode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void massSendAsync(string userName, string passWord, string smsContent, string cellPhone, string sendTime, string smsPriority, string sendAppId, string extendedCode) {
            this.massSendAsync(userName, passWord, smsContent, cellPhone, sendTime, smsPriority, sendAppId, extendedCode, null);
        }
        
        /// <remarks/>
        public void massSendAsync(string userName, string passWord, string smsContent, string cellPhone, string sendTime, string smsPriority, string sendAppId, string extendedCode, object userState) {
            if ((this.massSendOperationCompleted == null)) {
                this.massSendOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmassSendOperationCompleted);
            }
            this.InvokeAsync("massSend", new object[] {
                        userName,
                        passWord,
                        smsContent,
                        cellPhone,
                        sendTime,
                        smsPriority,
                        sendAppId,
                        extendedCode}, this.massSendOperationCompleted, userState);
        }
        
        private void OnmassSendOperationCompleted(object arg) {
            if ((this.massSendCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.massSendCompleted(this, new massSendCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void batchSendCompletedEventHandler(object sender, batchSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class batchSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal batchSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void variableSendCompletedEventHandler(object sender, variableSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class variableSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal variableSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void querySendAppLogCompletedEventHandler(object sender, querySendAppLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class querySendAppLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal querySendAppLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void massSendCompletedEventHandler(object sender, massSendCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class massSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal massSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591